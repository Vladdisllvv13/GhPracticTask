// Generated by view binder compiler. Do not edit!
package com.example.icerockrepoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.icerockrepoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRepositoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final TextView tvLanguage;

  @NonNull
  public final TextView tvReadMe;

  @NonNull
  public final TextView tvRepositoryName;

  @NonNull
  public final View view;

  private ItemRepositoryBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier,
      @NonNull TextView tvLanguage, @NonNull TextView tvReadMe, @NonNull TextView tvRepositoryName,
      @NonNull View view) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.tvLanguage = tvLanguage;
    this.tvReadMe = tvReadMe;
    this.tvRepositoryName = tvRepositoryName;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRepositoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRepositoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_repository, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRepositoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = rootView.findViewById(id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.tvLanguage;
      TextView tvLanguage = rootView.findViewById(id);
      if (tvLanguage == null) {
        break missingId;
      }

      id = R.id.tvReadMe;
      TextView tvReadMe = rootView.findViewById(id);
      if (tvReadMe == null) {
        break missingId;
      }

      id = R.id.tvRepositoryName;
      TextView tvRepositoryName = rootView.findViewById(id);
      if (tvRepositoryName == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      return new ItemRepositoryBinding((ConstraintLayout) rootView, barrier, tvLanguage, tvReadMe,
          tvRepositoryName, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
